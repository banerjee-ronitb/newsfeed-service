server:
  port: 8080
spring:
  security:
    oauth2:
      resourceserver:
          jwt:
            jwk-uri: ${OKTA_JWK_URI}
            jwk-set-uri: ${OKTA_ISSUER}
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
  
      client:
          provider:
            okta:
                token-uri: ${OKTA_TOKEN_URI}
          registration:
            okta:
                issuer: ${OKTA_ISSUER}
                client-id: ${CC_CLIENT_ID}
                client-secret: ${CC_CLIENT_SECRET}
                authorization-grant-type: client_credentials
                scope: ${CC_SCOPE}
  application:
      name: newsfeed-service
  main:
     allow-bean-definition-overriding: true
  data:
    cassandra:
      keyspaceName: ${CASSANDRA_KEYSPACE_NAME}
      contactPoints: ${CASSANDRA_CONTACT_POINT}
      port: ${CASSANDRA_PORT}
      schema-action: CREATE_IF_NOT_EXISTS
      local-datacenter: datacenter1
  cloud: 
    loadbalancer:
      ribbon:
        enable: true
    stream:
      function:
        definition: postEventConsumer
      bindings:
        postEventConsumer-in-0:
          destination: post-event
      kafka:
        bindings:
          postEventConsumer-in-0:
            consumer:
              configuration:
                value:
                  deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer 
   
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
